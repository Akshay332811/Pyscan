#!/usr/bin/python

#######
# This script will help find and remove common injections
# by Felipe Montes & Gabriel Smith - Chile
#######

import re
import sys
import getopt
from os import walk, path, getcwd
import time

def testRegex(regexList):
    for ALL in regexList:
        try:
            newRegex = re.compile(ALL)
        except re.error:
            print "Invalid Regex Found!"
            print "Example:"
            print ALL
            sys.exit(1)

def findAllFiles(desiredPath):
    files = []
    for (path, dnames, fnames) in walk(desiredPath):
        for f in fnames:
            files.append(path+"/"+f)

    return files

def printFiles(list):
    for ALL in list:
        print ALL

def correctInjections(files, regex, printOnly):
    print "Injections found:"
    print "~~~"

    for fileName in files:
        try:
            fileContents = open(fileName).read()
        except IOError:
            continue

        for injection in regex:
            compiled = re.compile(injection)
            foundInjection = compiled.findall(fileContents)

            if foundInjection:
                if printOnly:
                    for found in foundInjection:
                     print fileName+": "+str(found)
                else:
                    newFileContents = compiled.sub('', fileContents)

                    try:
                        openFile = open(fileName, 'w')
                        openFile.write(newFileContents)
                        openFile.close()
                        print "Injection "+str(regex.index(injection))+" Found: "+fileName+" cleaned."
                    except IOError:
                        print "Injection "+str(regex.index(injection))+" Found: PERMISSION DENIED TO "+fileName


                    fileContents = open(fileName).read()

    print "~~~"
    print ""



def main(argv):
    print ""

    try:
        opts, args = getopt.getopt(argv,"hu:cp",["help","user=","current","print"])
    except getopt.GetoptError:
        print "python injectionremover.py -u username"
        sys.exit(2)

    desiredPath = "None"
    printOnly = False
    for opt, arg in opts:
        if opt in ("-h", "--help"):
            print "Usage: python injectionremover.py -u username"
            print "-u : --user : Specifies a user to scan."
            print "-c : --current : Specifies to scan the current directory."
            print "-p : --print : Scan will only print the found injections. Not remove them."
            sys.exit(1)
        elif opt in ("-u", "--user"):
            desiredPath = "/home/"+arg+"/public_html"
        elif opt in ("-c", "--current"):
            desiredPath = getcwd()
        elif opt in ("-p", "--user"):
            printOnly = True

    if desiredPath == "None":
        print "No path (-u or -c) option specified."
        print "Correct Usage: python injectionremover.py -u username"
        sys.exit(1)

    if printOnly:
        print "Injections will not be removed. Printing results."

    if path.exists(desiredPath):
        print ""
        print "Scanning the following directory:"
        print "~~~"
        print desiredPath
        print "~~~"
        print ""
    else:
        print "Specified directory not found..."
        sys.exit(1)



    regexList = []

    regexList.append("<\?php +\$sF=\"PCT[0-9]BA[0-9]ODSE\_\";\$s[0-9]+=strtolower\(\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\]\);\$s[0-9]+=\$.strtoupper\(\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\]\).\['[a-zA-Z0-9]*'\];if\(isset\(\$s[0-9]+\)\).[a-z]+\(\$s[0-9]+\(\$s[0-9]+\)\);\}\?>")

    regexList.append("<\?php +\$sF=\"PCT[0-9]BA[0-9]ODSE\_\";\$s[0-9]+=strtolower\(\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\]\);\$s[0-9]+=strtoupper\(\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\].\$sF\[[0-9]+\]\).if.\(isset\(\$.\$s20.\[.[0-9a-z]{7}.\]\)\)..[a-z]+\(\$s21\(\$.\$s20.\[.[0-9a-z]{7}.\]\)\);\}\?>")

    regexList.append("<\?php +\$qV=\"stop_\";\$s[0-9]+=strtoupper\(\$qV\[[0-9]+\].\$qV\[[0-9]+\].\$qV\[[0-9]+\].\$qV\[[0-9]+\].\$qV\[[0-9]+\]\);if\(isset\(\$.\$s[0-9]+.\['[0-9a-z]{7}'\]\)\).[a-z]+\(\$.\$s[0-9]+.\['[0-9a-z]{7}'\]\);\}\?>")

    regexList.append("<\?php \$post_var = \"req\"; if\(isset\(\$_REQUEST\[\$post_var\]\)\) \{ eval\(stripslashes\(\$_REQUEST\[\$post_var\]\)\); exit\(\); \}; \?>")

    regexList.append("<\?php +eval\(base64_decode\(\$_POST\['[0-9a-z]{7}'\]\)\);\?>")

    regexList.append("<\?php error_reporting\(0\);eval\(\"if\(isset\(\\\$_REQUEST\['ch'\]\) && \(md5\(\\\$_REQUEST\['ch'\]\) == '[a-z0-9]{32}'\) && isset\(\\\$_REQUEST\['php_code'\]\)\) \{ eval\(stripslashes\(\\\$_REQUEST\['php_code'\]\)\); exit\(\); \}\"\); \?>")

    regexList.append("\@preg_replace\('/\(\.\*\)/e', \@._POST\['[a-z]+'\], ''\);")

    regexList.append("<\?(php)?\s+\$GLOBALS\['[a-zA-Z0-9]+'\];.*?=\$_COOKIE;.*?\);}exit\(\);} \?>")

    newregex = r'<\?php if\(\!isset\(\$GLOBALS\["\\x61\\156\\x75\\156\\x61"\]\)\).*sizeof\(.*?-1; \?>'
    regexList.append(newregex)

    regexList.append("<\?php\s*\$[a-z0-9]+\s*=\s*\"[a-z0-9]*_[a-z0-9]*\"\s*;(?:\s*\$[a-zA-Z0-9]+\s*=\s*(?:[\$a-zA-Z0-9]*\s*\(){0,1}\s*(?:\$[a-zA-Z0-9]+\[[0-9]+\][\.\s\)]*)+;\s*)+if\s*\(\s*isset\s*\(\s*\$\s*\{\s*\$\s*[a-zA-Z0-9]+\s*\}\s*\[\s*'\s*[a-zA-Z0-9]+\s*'\s*\]\s*\)\s*\)\s*\{\s*eval\s*\(\s*(?:\$[a-zA-Z0-9]+\s*\(){0,1}\s*\$\s*\{\s*\$[a-zA-Z0-9]+\s*\}\s*\[\s*'\s*[a-zA-Z0-9]+\s*'\s*\][\)\s]*;\s*[\}\s]*\?>\s*")

    regexList.append("if \(isset\(\$_REQUEST\[\"[a-zA-Z0-9]+\"\]\)\) {(?:/\*[a-zA-Z0-9]+\*/)?@preg_replace\('/\(\.\*\)/e', @\$_REQUEST\['[a-zA-Z0-9]+'\], ''\);(?:/\*[a-zA-Z0-9]+\*/)?}")

    regexList.append("if \([\$]_FILES\['F1l3'\]\) {move_uploaded_file\([\$]_FILES\['F1l3'\]\['tmp_name'\], [\$]_POST\['Name'\]\); echo 'OK'; Exit;}")

    regexList.append("\s*<script>var a='';\s*setTimeout\([0-9]+\);if\(document\.referrer\.indexOf.*?script>'\);}</script>")

    testRegex(regexList)

    fileList = findAllFiles(desiredPath)

    correctInjections(fileList, regexList, printOnly)

    print "Account Scan Complete..."
    print "Exiting..."
    print ""

if __name__ == "__main__":
   startTime = time.time()
   main(sys.argv[1:])
   print ("Ran in: --- %s seconds ---" % (time.time() - startTime))
